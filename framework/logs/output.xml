<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171228 02:42:14.605" generator="Robot 3.0.2 (Python 2.7.5 on linux2)">
<suite source="/home/andrei/testing_task/framework/TS001.robot" id="s1" name="TS001">
<test id="s1-t1" name="TC0001 Check balance after service addition">
<kw type="setup" name="Main Test Setup" library="Setup_teardown">
<kw name="Start Application" library="keywords">
<doc>Main setup function for test case</doc>
<msg timestamp="20171228 02:42:14.701" level="INFO">
2017-12-28 02:42:14.701: Starting 'testing_web_1' application...</msg>
<msg timestamp="20171228 02:42:14.701" level="INFO">
2017-12-28 02:42:14.701: Executing 'docker-compose build' command...</msg>
<msg timestamp="20171228 02:42:14.883" level="INFO">
2017-12-28 02:42:14.883: Executing 'docker-compose up -d' command...</msg>
<msg timestamp="20171228 02:42:15.637" level="INFO">
2017-12-28 02:42:15.637: Application successfully started</msg>
<status status="PASS" endtime="20171228 02:42:15.637" starttime="20171228 02:42:14.701"></status>
</kw>
<status status="PASS" endtime="20171228 02:42:15.638" starttime="20171228 02:42:14.700"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 1. Create connection to database ===</arg>
</arguments>
<msg timestamp="20171228 02:42:15.638" level="INFO">
2017-12-28 02:42:15.638: === Step 1. Create connection to database ===</msg>
<status status="PASS" endtime="20171228 02:42:15.638" starttime="20171228 02:42:15.638"></status>
</kw>
<kw name="Connect To Database" library="keywords">
<doc>Function to connect to database</doc>
<arguments>
<arg>path_to_db=../testing/web/clients.db</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20171228 02:42:15.639" level="INFO">
2017-12-28 02:42:15.639: Connecting to database...</msg>
<msg timestamp="20171228 02:42:15.657" level="INFO">${database} = &lt;sqlite3.Cursor object at 0x355b8f0&gt;</msg>
<status status="PASS" endtime="20171228 02:42:15.657" starttime="20171228 02:42:15.638"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 2. Select client with positive balance ===</arg>
</arguments>
<msg timestamp="20171228 02:42:15.657" level="INFO">
2017-12-28 02:42:15.657: === Step 2. Select client with positive balance ===</msg>
<status status="PASS" endtime="20171228 02:42:15.657" starttime="20171228 02:42:15.657"></status>
</kw>
<kw name="Select Client With Positive Balance" library="keywords">
<doc>Function to select any client with positive balance</doc>
<arguments>
<arg>${database}</arg>
<arg>default_balance=5</arg>
</arguments>
<assign>
<var>${client_id}</var>
</assign>
<msg timestamp="20171228 02:42:15.658" level="INFO">
2017-12-28 02:42:15.658: Selecting client with positive balance from database...</msg>
<msg timestamp="20171228 02:42:15.674" level="INFO">${client_id} = 3</msg>
<status status="PASS" endtime="20171228 02:42:15.674" starttime="20171228 02:42:15.657"></status>
</kw>
<kw name="Select Clients Balance" library="keywords">
<doc>Function to get client balance</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${database}</arg>
</arguments>
<assign>
<var>${client_balance}</var>
</assign>
<msg timestamp="20171228 02:42:15.674" level="INFO">
2017-12-28 02:42:15.674: Selecting balance for client with client_id=3...</msg>
<msg timestamp="20171228 02:42:15.683" level="INFO">${client_balance} = 3.5</msg>
<status status="PASS" endtime="20171228 02:42:15.683" starttime="20171228 02:42:15.674"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 3. Select client enabled services ===</arg>
</arguments>
<msg timestamp="20171228 02:42:15.683" level="INFO">
2017-12-28 02:42:15.683: === Step 3. Select client enabled services ===</msg>
<status status="PASS" endtime="20171228 02:42:15.683" starttime="20171228 02:42:15.683"></status>
</kw>
<kw name="Get Client Services" library="keywords">
<doc>Function to get clients enabled services</doc>
<arguments>
<arg>${client_id}</arg>
</arguments>
<assign>
<var>${enabled_services}</var>
</assign>
<msg timestamp="20171228 02:42:15.694" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171228 02:42:15.705" level="INFO">${enabled_services} = [1]</msg>
<status status="PASS" endtime="20171228 02:42:15.705" starttime="20171228 02:42:15.683"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 4. Get all services ===</arg>
</arguments>
<msg timestamp="20171228 02:42:15.705" level="INFO">
2017-12-28 02:42:15.705: === Step 4. Get all services ===</msg>
<status status="PASS" endtime="20171228 02:42:15.705" starttime="20171228 02:42:15.705"></status>
</kw>
<kw name="Get List Of All Services" library="keywords">
<doc>Function to get list of all services</doc>
<assign>
<var>${all_services}</var>
</assign>
<msg timestamp="20171228 02:42:15.706" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171228 02:42:15.710" level="INFO">${all_services} = [{u'cost': 1.2, u'id': 1, u'name': u'Service #1'}, {u'cost': 0.35, u'id': 2, u'name': u'Service #2'}, {u'cost': 0.15, u'id': 3, u'name': u'Service #3'}, {u'cost': 0.15, u'id': 4, u'name': u'Service #4...</msg>
<status status="PASS" endtime="20171228 02:42:15.710" starttime="20171228 02:42:15.706"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 5. Get not enabled service for client ===</arg>
</arguments>
<msg timestamp="20171228 02:42:15.710" level="INFO">
2017-12-28 02:42:15.710: === Step 5. Get not enabled service for client ===</msg>
<status status="PASS" endtime="20171228 02:42:15.710" starttime="20171228 02:42:15.710"></status>
</kw>
<kw name="Get Not Enabled Service Id" library="keywords">
<doc>Function to get id of not enabled service</doc>
<arguments>
<arg>${enabled_services}</arg>
<arg>${all_services}</arg>
</arguments>
<assign>
<var>${not_enabled_service_id}</var>
</assign>
<msg timestamp="20171228 02:42:15.711" level="INFO">${not_enabled_service_id} = 5</msg>
<status status="PASS" endtime="20171228 02:42:15.711" starttime="20171228 02:42:15.711"></status>
</kw>
<kw name="Get Service Cost" library="keywords">
<doc>Function to get cost of service</doc>
<arguments>
<arg>${not_enabled_service_id}</arg>
</arguments>
<assign>
<var>${not_enabled_service_cost}</var>
</assign>
<msg timestamp="20171228 02:42:15.712" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171228 02:42:15.715" level="INFO">${not_enabled_service_cost} = 0.05</msg>
<status status="PASS" endtime="20171228 02:42:15.715" starttime="20171228 02:42:15.711"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 6. Enable service for client ===</arg>
</arguments>
<msg timestamp="20171228 02:42:15.715" level="INFO">
2017-12-28 02:42:15.715: === Step 6. Enable service for client ===</msg>
<status status="PASS" endtime="20171228 02:42:15.715" starttime="20171228 02:42:15.715"></status>
</kw>
<kw name="Enable Service For Client Id" library="keywords">
<doc>Function to set service enabled for specified client</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${not_enabled_service_id}</arg>
</arguments>
<assign>
<var>${ex_code}</var>
</assign>
<msg timestamp="20171228 02:42:15.716" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171228 02:42:15.721" level="INFO">${ex_code} = 202</msg>
<status status="PASS" endtime="20171228 02:42:15.721" starttime="20171228 02:42:15.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ex_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20171228 02:42:15.722" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171228 02:42:15.722" starttime="20171228 02:42:15.722"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 7. Wait for service is enabled ===</arg>
</arguments>
<msg timestamp="20171228 02:42:15.723" level="INFO">
2017-12-28 02:42:15.723: === Step 7. Wait for service is enabled ===</msg>
<status status="PASS" endtime="20171228 02:42:15.723" starttime="20171228 02:42:15.722"></status>
</kw>
<kw name="Wait For Service Is Enabled" library="keywords">
<doc>Function to wait until service is enabled for specified client</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${not_enabled_service_id}</arg>
<arg>top_attempts=30</arg>
<arg>sleep_time=2</arg>
</arguments>
<msg timestamp="20171228 02:42:15.723" level="INFO">
2017-12-28 02:42:15.723: Start waiting for service 5 is enabled for client 3</msg>
<msg timestamp="20171228 02:42:15.723" level="INFO">
2017-12-28 02:42:15.723: 30 attempts left</msg>
<msg timestamp="20171228 02:42:15.723" level="INFO">
2017-12-28 02:42:15.723: Checking service 5 in client 3 enabled services</msg>
<msg timestamp="20171228 02:42:15.724" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171228 02:42:15.728" level="INFO">
2017-12-28 02:42:15.728: Checking service 5 in client enabled services [1]</msg>
<msg timestamp="20171228 02:42:15.728" level="INFO">
2017-12-28 02:42:15.728: Service 5 is not enabled for this client</msg>
<msg timestamp="20171228 02:42:15.728" level="INFO">
2017-12-28 02:42:15.728: Waiting 2 seconds...</msg>
<msg timestamp="20171228 02:42:17.729" level="INFO">
2017-12-28 02:42:17.729: 29 attempts left</msg>
<msg timestamp="20171228 02:42:17.729" level="INFO">
2017-12-28 02:42:17.729: Checking service 5 in client 3 enabled services</msg>
<msg timestamp="20171228 02:42:17.730" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171228 02:42:17.733" level="INFO">
2017-12-28 02:42:17.733: Checking service 5 in client enabled services [1, 5]</msg>
<msg timestamp="20171228 02:42:17.733" level="INFO">
2017-12-28 02:42:17.733: Service 5 is enabled for client 3</msg>
<status status="PASS" endtime="20171228 02:42:17.733" starttime="20171228 02:42:15.723"></status>
</kw>
<kw name="Get Client Services" library="keywords">
<doc>Function to get clients enabled services</doc>
<arguments>
<arg>${client_id}</arg>
</arguments>
<assign>
<var>${enabled_services2}</var>
</assign>
<msg timestamp="20171228 02:42:17.734" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171228 02:42:17.737" level="INFO">${enabled_services2} = [1, 5]</msg>
<status status="PASS" endtime="20171228 02:42:17.737" starttime="20171228 02:42:17.733"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 8. Get client balance ===</arg>
</arguments>
<msg timestamp="20171228 02:42:17.737" level="INFO">
2017-12-28 02:42:17.737: === Step 8. Get client balance ===</msg>
<status status="PASS" endtime="20171228 02:42:17.737" starttime="20171228 02:42:17.737"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>60</arg>
</arguments>
<msg timestamp="20171228 02:43:17.738" level="INFO">Slept 1 minute</msg>
<status status="PASS" endtime="20171228 02:43:17.738" starttime="20171228 02:42:17.737"></status>
</kw>
<kw name="Select Clients Balance" library="keywords">
<doc>Function to get client balance</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${database}</arg>
</arguments>
<assign>
<var>${final_client_balance}</var>
</assign>
<msg timestamp="20171228 02:43:17.739" level="INFO">
2017-12-28 02:43:17.739: Selecting balance for client with client_id=3...</msg>
<msg timestamp="20171228 02:43:17.741" level="INFO">${final_client_balance} = 3.5</msg>
<status status="PASS" endtime="20171228 02:43:17.741" starttime="20171228 02:43:17.739"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 9. Check that balance is correct ===</arg>
</arguments>
<msg timestamp="20171228 02:43:17.742" level="INFO">
2017-12-28 02:43:17.741: === Step 9. Check that balance is correct ===</msg>
<status status="PASS" endtime="20171228 02:43:17.742" starttime="20171228 02:43:17.741"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${client_balance}-${not_enabled_service_cost}</arg>
</arguments>
<assign>
<var>${calc_final_balance}</var>
</assign>
<msg timestamp="20171228 02:43:17.742" level="INFO">${calc_final_balance} = 3.45</msg>
<status status="PASS" endtime="20171228 02:43:17.742" starttime="20171228 02:43:17.742"></status>
</kw>
<kw name="Compare Results" library="keywords">
<doc>Function to compare actual result with expected result</doc>
<arguments>
<arg>${final_client_balance}</arg>
<arg>${calc_final_balance}</arg>
</arguments>
<msg timestamp="20171228 02:43:17.742" level="INFO">
2017-12-28 02:43:17.742: Compare actual result 3.5 with calculated result 3.45</msg>
<msg timestamp="20171228 02:43:17.743" level="INFO">
2017-12-28 02:43:17.743: 3.5 and 3.45 should be equal</msg>
<msg timestamp="20171228 02:43:17.745" level="FAIL">MyError: 3.5 != 3.45, but should</msg>
<status status="FAIL" endtime="20171228 02:43:17.745" starttime="20171228 02:43:17.742"></status>
</kw>
<kw type="teardown" name="Main Test Teardown" library="Setup_teardown">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Starting Test case Teardown\n</arg>
</arguments>
<status status="PASS" endtime="20171228 02:43:17.746" starttime="20171228 02:43:17.746"></status>
</kw>
<kw name="Stop Application" library="keywords">
<doc>Main teardown function for test case</doc>
<msg timestamp="20171228 02:43:17.746" level="INFO">
2017-12-28 02:43:17.746: Stopping 'testing_web_1' application...</msg>
<msg timestamp="20171228 02:43:17.746" level="INFO">
2017-12-28 02:43:17.746: Executing 'docker-compose down' command...</msg>
<msg timestamp="20171228 02:43:28.398" level="INFO">
2017-12-28 02:43:28.398: Application successfully stopped</msg>
<status status="PASS" endtime="20171228 02:43:28.398" starttime="20171228 02:43:17.746"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>log to console</arg>
<arg>FAIL ${TEST NAME}\n\n</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>FAIL ${TEST NAME}\n\n</arg>
</arguments>
<status status="PASS" endtime="20171228 02:43:28.399" starttime="20171228 02:43:28.399"></status>
</kw>
<status status="PASS" endtime="20171228 02:43:28.399" starttime="20171228 02:43:28.399"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>log to console</arg>
<arg>PASS ${TEST NAME}\n\n</arg>
</arguments>
<status status="PASS" endtime="20171228 02:43:28.400" starttime="20171228 02:43:28.400"></status>
</kw>
<status status="PASS" endtime="20171228 02:43:28.400" starttime="20171228 02:43:17.745"></status>
</kw>
<tags>
<tag>TC0001</tag>
</tags>
<status status="FAIL" endtime="20171228 02:43:28.400" critical="yes" starttime="20171228 02:42:14.700">MyError: 3.5 != 3.45, but should</status>
</test>
<doc>Suite description</doc>
<status status="FAIL" endtime="20171228 02:43:28.400" starttime="20171228 02:42:14.608"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">TC0001</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="TS001" pass="0">TS001</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
