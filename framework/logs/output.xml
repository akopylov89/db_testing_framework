<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171227 06:19:17.435" generator="Robot 3.0.2 (Python 2.7.5 on linux2)">
<suite source="/home/andrei/testing_task/framework/TS001.robot" id="s1" name="TS001">
<test id="s1-t1" name="TC0001 Check balance after service addition">
<kw type="setup" name="Main Test Setup" library="Setup_teardown">
<kw name="Start Application" library="keywords">
<doc>Main setup function for test case</doc>
<msg timestamp="20171227 06:19:17.539" level="INFO">
2017-12-27 06:19:17.539: Starting 'testing_web_1' application...</msg>
<msg timestamp="20171227 06:19:17.541" level="INFO">
2017-12-27 06:19:17.540: ('/home/andrei/testing_task/framework\n', '', 0)</msg>
<msg timestamp="20171227 06:19:17.542" level="INFO">
2017-12-27 06:19:17.542: ('/home/andrei/testing_task/testing\n', '', 0)</msg>
<msg timestamp="20171227 06:19:17.542" level="INFO">
2017-12-27 06:19:17.542: Executing 'docker-compose build' command...</msg>
<msg timestamp="20171227 06:19:17.757" level="INFO">
2017-12-27 06:19:17.757: Executing 'docker-compose up -d' command...</msg>
<msg timestamp="20171227 06:19:18.594" level="INFO">
2017-12-27 06:19:18.593: Application successfully started</msg>
<status status="PASS" endtime="20171227 06:19:18.594" starttime="20171227 06:19:17.539"></status>
</kw>
<status status="PASS" endtime="20171227 06:19:18.594" starttime="20171227 06:19:17.538"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 1. Create connection to database ===</arg>
</arguments>
<msg timestamp="20171227 06:19:18.595" level="INFO">
2017-12-27 06:19:18.595: === Step 1. Create connection to database ===</msg>
<status status="PASS" endtime="20171227 06:19:18.595" starttime="20171227 06:19:18.595"></status>
</kw>
<kw name="Connect To Database" library="keywords">
<doc>Function to connect to database</doc>
<arguments>
<arg>path_to_db=../testing/web/clients.db</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20171227 06:19:18.595" level="INFO">
2017-12-27 06:19:18.595: Connecting to database...</msg>
<msg timestamp="20171227 06:19:18.616" level="INFO">${database} = &lt;sqlite3.Cursor object at 0x33b6a40&gt;</msg>
<status status="PASS" endtime="20171227 06:19:18.616" starttime="20171227 06:19:18.595"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 2. Select client with positive balance ===</arg>
</arguments>
<msg timestamp="20171227 06:19:18.616" level="INFO">
2017-12-27 06:19:18.616: === Step 2. Select client with positive balance ===</msg>
<status status="PASS" endtime="20171227 06:19:18.616" starttime="20171227 06:19:18.616"></status>
</kw>
<kw name="Select Client With Positive Balance" library="keywords">
<doc>Function to select any client with positive balance</doc>
<arguments>
<arg>${database}</arg>
<arg>default_balance=5</arg>
</arguments>
<assign>
<var>${client_id}</var>
</assign>
<msg timestamp="20171227 06:19:18.617" level="INFO">
2017-12-27 06:19:18.617: Selecting client with positive balance from database...</msg>
<msg timestamp="20171227 06:19:18.646" level="INFO">${client_id} = 3</msg>
<status status="PASS" endtime="20171227 06:19:18.646" starttime="20171227 06:19:18.616"></status>
</kw>
<kw name="Select Clients Balance" library="keywords">
<doc>Function to get client balance</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${database}</arg>
</arguments>
<assign>
<var>${client_balance}</var>
</assign>
<msg timestamp="20171227 06:19:18.646" level="INFO">
2017-12-27 06:19:18.646: Selecting balance for client with client_id=3...</msg>
<msg timestamp="20171227 06:19:18.658" level="INFO">${client_balance} = 3.5</msg>
<status status="PASS" endtime="20171227 06:19:18.658" starttime="20171227 06:19:18.646"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 3. Select client enabled services ===</arg>
</arguments>
<msg timestamp="20171227 06:19:18.659" level="INFO">
2017-12-27 06:19:18.659: === Step 3. Select client enabled services ===</msg>
<status status="PASS" endtime="20171227 06:19:18.659" starttime="20171227 06:19:18.658"></status>
</kw>
<kw name="Get Client Services" library="keywords">
<doc>Function to get clients enabled services</doc>
<arguments>
<arg>${client_id}</arg>
</arguments>
<assign>
<var>${enabled_services}</var>
</assign>
<msg timestamp="20171227 06:19:18.691" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:19:18.711" level="INFO">${enabled_services} = [1]</msg>
<status status="PASS" endtime="20171227 06:19:18.711" starttime="20171227 06:19:18.659"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 4. Get all services ===</arg>
</arguments>
<msg timestamp="20171227 06:19:18.712" level="INFO">
2017-12-27 06:19:18.712: === Step 4. Get all services ===</msg>
<status status="PASS" endtime="20171227 06:19:18.712" starttime="20171227 06:19:18.711"></status>
</kw>
<kw name="Get List Of All Services" library="keywords">
<doc>Function to get list of all services</doc>
<assign>
<var>${all_services}</var>
</assign>
<msg timestamp="20171227 06:19:18.713" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:19:18.718" level="INFO">${all_services} = [{u'cost': 1.2, u'id': 1, u'name': u'Service #1'}, {u'cost': 0.35, u'id': 2, u'name': u'Service #2'}, {u'cost': 0.15, u'id': 3, u'name': u'Service #3'}, {u'cost': 0.15, u'id': 4, u'name': u'Service #4...</msg>
<status status="PASS" endtime="20171227 06:19:18.718" starttime="20171227 06:19:18.712"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 5. Get not enabled service for client ===</arg>
</arguments>
<msg timestamp="20171227 06:19:18.718" level="INFO">
2017-12-27 06:19:18.718: === Step 5. Get not enabled service for client ===</msg>
<status status="PASS" endtime="20171227 06:19:18.718" starttime="20171227 06:19:18.718"></status>
</kw>
<kw name="Get Not Enabled Service Id" library="keywords">
<doc>Function to get id of not enabled service</doc>
<arguments>
<arg>${enabled_services}</arg>
<arg>${all_services}</arg>
</arguments>
<assign>
<var>${not_enabled_service_id}</var>
</assign>
<msg timestamp="20171227 06:19:18.719" level="INFO">${not_enabled_service_id} = 3</msg>
<status status="PASS" endtime="20171227 06:19:18.719" starttime="20171227 06:19:18.718"></status>
</kw>
<kw name="Get Service Cost" library="keywords">
<doc>Function to get cost of service</doc>
<arguments>
<arg>${not_enabled_service_id}</arg>
</arguments>
<assign>
<var>${not_enabled_service_cost}</var>
</assign>
<msg timestamp="20171227 06:19:18.720" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:19:18.723" level="INFO">${not_enabled_service_cost} = 0.15</msg>
<status status="PASS" endtime="20171227 06:19:18.723" starttime="20171227 06:19:18.719"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 6. Enable service for client ===</arg>
</arguments>
<msg timestamp="20171227 06:19:18.723" level="INFO">
2017-12-27 06:19:18.723: === Step 6. Enable service for client ===</msg>
<status status="PASS" endtime="20171227 06:19:18.723" starttime="20171227 06:19:18.723"></status>
</kw>
<kw name="Enable Service For Client Id" library="keywords">
<doc>Function to set service enabled for specified client</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${not_enabled_service_id}</arg>
</arguments>
<assign>
<var>${ex_code}</var>
</assign>
<msg timestamp="20171227 06:19:18.724" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:19:18.741" level="INFO">${ex_code} = 202</msg>
<status status="PASS" endtime="20171227 06:19:18.741" starttime="20171227 06:19:18.723"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ex_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20171227 06:19:18.741" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171227 06:19:18.742" starttime="20171227 06:19:18.741"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 7. Wait for service is enabled ===</arg>
</arguments>
<msg timestamp="20171227 06:19:18.743" level="INFO">
2017-12-27 06:19:18.743: === Step 7. Wait for service is enabled ===</msg>
<status status="PASS" endtime="20171227 06:19:18.743" starttime="20171227 06:19:18.742"></status>
</kw>
<kw name="Wait For Service Is Enabled" library="keywords">
<doc>Function to wait until service is enabled for specified client</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${not_enabled_service_id}</arg>
<arg>top_attempts=30</arg>
<arg>sleep_time=2</arg>
</arguments>
<msg timestamp="20171227 06:19:18.744" level="INFO">
2017-12-27 06:19:18.743: Start waiting for service 3 is enabled for client 3</msg>
<msg timestamp="20171227 06:19:18.744" level="INFO">
2017-12-27 06:19:18.744: 30 attempts left</msg>
<msg timestamp="20171227 06:19:18.744" level="INFO">
2017-12-27 06:19:18.744: Checking service 3 in client 3 enabled services</msg>
<msg timestamp="20171227 06:19:18.744" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:19:18.749" level="INFO">
2017-12-27 06:19:18.749: Checking service 3 in client enabled services [1]</msg>
<msg timestamp="20171227 06:19:18.750" level="INFO">
2017-12-27 06:19:18.749: Service 3 is not enabled for this client</msg>
<msg timestamp="20171227 06:19:18.750" level="INFO">
2017-12-27 06:19:18.750: Waiting 2 seconds...</msg>
<msg timestamp="20171227 06:19:20.751" level="INFO">
2017-12-27 06:19:20.751: 29 attempts left</msg>
<msg timestamp="20171227 06:19:20.751" level="INFO">
2017-12-27 06:19:20.751: Checking service 3 in client 3 enabled services</msg>
<msg timestamp="20171227 06:19:20.752" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:19:20.754" level="INFO">
2017-12-27 06:19:20.754: Checking service 3 in client enabled services [1]</msg>
<msg timestamp="20171227 06:19:20.754" level="INFO">
2017-12-27 06:19:20.754: Service 3 is not enabled for this client</msg>
<msg timestamp="20171227 06:19:20.754" level="INFO">
2017-12-27 06:19:20.754: Waiting 2 seconds...</msg>
<msg timestamp="20171227 06:19:22.755" level="INFO">
2017-12-27 06:19:22.755: 28 attempts left</msg>
<msg timestamp="20171227 06:19:22.756" level="INFO">
2017-12-27 06:19:22.756: Checking service 3 in client 3 enabled services</msg>
<msg timestamp="20171227 06:19:22.756" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:19:22.814" level="INFO">
2017-12-27 06:19:22.814: Checking service 3 in client enabled services [1, 3]</msg>
<msg timestamp="20171227 06:19:22.814" level="INFO">
2017-12-27 06:19:22.814: Service 3 is enabled for client 3</msg>
<status status="PASS" endtime="20171227 06:19:22.814" starttime="20171227 06:19:18.743"></status>
</kw>
<kw name="Get Client Services" library="keywords">
<doc>Function to get clients enabled services</doc>
<arguments>
<arg>${client_id}</arg>
</arguments>
<assign>
<var>${enabled_services2}</var>
</assign>
<msg timestamp="20171227 06:19:22.815" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:19:22.821" level="INFO">${enabled_services2} = [1, 3]</msg>
<status status="PASS" endtime="20171227 06:19:22.821" starttime="20171227 06:19:22.814"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 8. Get client balance ===</arg>
</arguments>
<msg timestamp="20171227 06:19:22.821" level="INFO">
2017-12-27 06:19:22.821: === Step 8. Get client balance ===</msg>
<status status="PASS" endtime="20171227 06:19:22.821" starttime="20171227 06:19:22.821"></status>
</kw>
<kw name="Select Clients Balance" library="keywords">
<doc>Function to get client balance</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${database}</arg>
</arguments>
<assign>
<var>${final_client_balance}</var>
</assign>
<msg timestamp="20171227 06:19:22.822" level="INFO">
2017-12-27 06:19:22.822: Selecting balance for client with client_id=3...</msg>
<msg timestamp="20171227 06:19:22.832" level="INFO">${final_client_balance} = 3.5</msg>
<status status="PASS" endtime="20171227 06:19:22.832" starttime="20171227 06:19:22.822"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 9. Check that balance is correct ===</arg>
</arguments>
<msg timestamp="20171227 06:19:22.832" level="INFO">
2017-12-27 06:19:22.832: === Step 9. Check that balance is correct ===</msg>
<status status="PASS" endtime="20171227 06:19:22.832" starttime="20171227 06:19:22.832"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${client_balance}-${not_enabled_service_cost}</arg>
</arguments>
<assign>
<var>${calc_final_balance}</var>
</assign>
<msg timestamp="20171227 06:19:22.833" level="INFO">${calc_final_balance} = 3.35</msg>
<status status="PASS" endtime="20171227 06:19:22.833" starttime="20171227 06:19:22.832"></status>
</kw>
<kw name="Compare Results" library="keywords">
<doc>Function to compare actual result with expected result</doc>
<arguments>
<arg>${final_client_balance}</arg>
<arg>${calc_final_balance}</arg>
</arguments>
<msg timestamp="20171227 06:19:22.833" level="INFO">
2017-12-27 06:19:22.833: Compare actual result 3.5 with calculated result 3.35</msg>
<msg timestamp="20171227 06:19:22.833" level="INFO">
2017-12-27 06:19:22.833: 3.5 and 3.35 should be equal</msg>
<msg timestamp="20171227 06:19:22.835" level="FAIL">MyError: 3.5 != 3.35, but should</msg>
<status status="FAIL" endtime="20171227 06:19:22.835" starttime="20171227 06:19:22.833"></status>
</kw>
<kw type="teardown" name="Main Test Teardown" library="Setup_teardown">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Starting Test case Teardown\n</arg>
</arguments>
<status status="PASS" endtime="20171227 06:19:22.836" starttime="20171227 06:19:22.836"></status>
</kw>
<kw name="Stop Application" library="keywords">
<doc>Main teardown function for test case</doc>
<msg timestamp="20171227 06:19:22.836" level="INFO">
2017-12-27 06:19:22.836: Stopping 'testing_web_1' application...</msg>
<msg timestamp="20171227 06:19:22.838" level="INFO">
2017-12-27 06:19:22.838: ('/home/andrei/testing_task/testing\n', '', 0)</msg>
<msg timestamp="20171227 06:19:22.840" level="INFO">
2017-12-27 06:19:22.839: ('/home/andrei/testing_task/testing\n', '', 0)</msg>
<msg timestamp="20171227 06:19:22.840" level="INFO">
2017-12-27 06:19:22.840: Executing 'docker-compose down' command...</msg>
<msg timestamp="20171227 06:19:33.545" level="INFO">
2017-12-27 06:19:33.545: Application successfully stopped</msg>
<status status="PASS" endtime="20171227 06:19:33.545" starttime="20171227 06:19:22.836"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>log to console</arg>
<arg>FAIL ${TEST NAME}\n\n</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>FAIL ${TEST NAME}\n\n</arg>
</arguments>
<status status="PASS" endtime="20171227 06:19:33.546" starttime="20171227 06:19:33.546"></status>
</kw>
<status status="PASS" endtime="20171227 06:19:33.546" starttime="20171227 06:19:33.545"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>log to console</arg>
<arg>PASS ${TEST NAME}\n\n</arg>
</arguments>
<status status="PASS" endtime="20171227 06:19:33.546" starttime="20171227 06:19:33.546"></status>
</kw>
<status status="PASS" endtime="20171227 06:19:33.546" starttime="20171227 06:19:22.835"></status>
</kw>
<tags>
<tag>TC0001</tag>
</tags>
<status status="FAIL" endtime="20171227 06:19:33.547" critical="yes" starttime="20171227 06:19:17.538">MyError: 3.5 != 3.35, but should</status>
</test>
<doc>Suite description</doc>
<status status="FAIL" endtime="20171227 06:19:33.547" starttime="20171227 06:19:17.436"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">TC0001</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="TS001" pass="0">TS001</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
