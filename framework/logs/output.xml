<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20171227 06:02:54.750" generator="Robot 3.0.2 (Python 2.7.5 on linux2)">
<suite source="/home/andrei/testing_task/framework/TS001.robot" id="s1" name="TS001">
<test id="s1-t1" name="TC0001 Check balance after service addition">
<kw type="setup" name="Main Test Setup" library="Setup_teardown">
<kw name="Start Application" library="keywords">
<doc>Main setup function for test case</doc>
<msg timestamp="20171227 06:02:54.842" level="INFO">
2017-12-27 06:02:54.842: Starting 'testing_web_1' application...</msg>
<msg timestamp="20171227 06:02:54.863" level="INFO">
2017-12-27 06:02:54.863: ('/home/andrei/testing_task/framework\n', '', 0)</msg>
<msg timestamp="20171227 06:02:54.865" level="INFO">
2017-12-27 06:02:54.865: ('/home/andrei/testing_task/testing\n', '', 0)</msg>
<msg timestamp="20171227 06:02:54.865" level="INFO">
2017-12-27 06:02:54.865: Executing 'docker-compose build' command...</msg>
<msg timestamp="20171227 06:02:55.068" level="INFO">
2017-12-27 06:02:55.067: Executing 'docker-compose up -d' command...</msg>
<msg timestamp="20171227 06:02:56.068" level="INFO">
2017-12-27 06:02:56.068: Application successfully started</msg>
<status status="PASS" endtime="20171227 06:02:56.068" starttime="20171227 06:02:54.842"></status>
</kw>
<status status="PASS" endtime="20171227 06:02:56.068" starttime="20171227 06:02:54.841"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 1. Create connection to database ===</arg>
</arguments>
<msg timestamp="20171227 06:02:56.069" level="INFO">
2017-12-27 06:02:56.069: === Step 1. Create connection to database ===</msg>
<status status="PASS" endtime="20171227 06:02:56.069" starttime="20171227 06:02:56.069"></status>
</kw>
<kw name="Connect To Database" library="keywords">
<doc>Function to connect to database</doc>
<arguments>
<arg>path_to_db=../testing/web/clients.db</arg>
</arguments>
<assign>
<var>${database}</var>
</assign>
<msg timestamp="20171227 06:02:56.069" level="INFO">
2017-12-27 06:02:56.069: Connecting to database...</msg>
<msg timestamp="20171227 06:02:56.090" level="INFO">${database} = &lt;sqlite3.Cursor object at 0x27a8a40&gt;</msg>
<status status="PASS" endtime="20171227 06:02:56.090" starttime="20171227 06:02:56.069"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 2. Select client with positive balance ===</arg>
</arguments>
<msg timestamp="20171227 06:02:56.090" level="INFO">
2017-12-27 06:02:56.090: === Step 2. Select client with positive balance ===</msg>
<status status="PASS" endtime="20171227 06:02:56.091" starttime="20171227 06:02:56.090"></status>
</kw>
<kw name="Select Client With Positive Balance" library="keywords">
<doc>Function to select any client with positive balance</doc>
<arguments>
<arg>${database}</arg>
<arg>default_balance=5</arg>
</arguments>
<assign>
<var>${client_id}</var>
</assign>
<msg timestamp="20171227 06:02:56.091" level="INFO">
2017-12-27 06:02:56.091: Selecting client with positive balance from database...</msg>
<msg timestamp="20171227 06:02:56.115" level="INFO">${client_id} = 3</msg>
<status status="PASS" endtime="20171227 06:02:56.115" starttime="20171227 06:02:56.091"></status>
</kw>
<kw name="Select Clients Balance" library="keywords">
<doc>Function to get client balance</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${database}</arg>
</arguments>
<assign>
<var>${client_balance}</var>
</assign>
<msg timestamp="20171227 06:02:56.115" level="INFO">
2017-12-27 06:02:56.115: Selecting balance for client with client_id=3...</msg>
<msg timestamp="20171227 06:02:56.121" level="INFO">${client_balance} = 3.5</msg>
<status status="PASS" endtime="20171227 06:02:56.121" starttime="20171227 06:02:56.115"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 3. Select client enabled services ===</arg>
</arguments>
<msg timestamp="20171227 06:02:56.122" level="INFO">
2017-12-27 06:02:56.122: === Step 3. Select client enabled services ===</msg>
<status status="PASS" endtime="20171227 06:02:56.122" starttime="20171227 06:02:56.122"></status>
</kw>
<kw name="Get Client Services" library="keywords">
<doc>Function to get clients enabled services</doc>
<arguments>
<arg>${client_id}</arg>
</arguments>
<assign>
<var>${enabled_services}</var>
</assign>
<msg timestamp="20171227 06:02:56.149" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:02:56.193" level="INFO">${enabled_services} = [1]</msg>
<status status="PASS" endtime="20171227 06:02:56.193" starttime="20171227 06:02:56.122"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 4. Get all services ===</arg>
</arguments>
<msg timestamp="20171227 06:02:56.193" level="INFO">
2017-12-27 06:02:56.193: === Step 4. Get all services ===</msg>
<status status="PASS" endtime="20171227 06:02:56.193" starttime="20171227 06:02:56.193"></status>
</kw>
<kw name="Get List Of All Services" library="keywords">
<doc>Function to get list of all services</doc>
<assign>
<var>${all_services}</var>
</assign>
<msg timestamp="20171227 06:02:56.194" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:02:56.197" level="INFO">${all_services} = [{u'cost': 1.2, u'id': 1, u'name': u'Service #1'}, {u'cost': 0.35, u'id': 2, u'name': u'Service #2'}, {u'cost': 0.15, u'id': 3, u'name': u'Service #3'}, {u'cost': 0.15, u'id': 4, u'name': u'Service #4...</msg>
<status status="PASS" endtime="20171227 06:02:56.197" starttime="20171227 06:02:56.193"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 5. Get not enabled service for client ===</arg>
</arguments>
<msg timestamp="20171227 06:02:56.197" level="INFO">
2017-12-27 06:02:56.197: === Step 5. Get not enabled service for client ===</msg>
<status status="PASS" endtime="20171227 06:02:56.198" starttime="20171227 06:02:56.197"></status>
</kw>
<kw name="Get Not Enabled Service Id" library="keywords">
<doc>Function to get id of not enabled service</doc>
<arguments>
<arg>${enabled_services}</arg>
<arg>${all_services}</arg>
</arguments>
<assign>
<var>${not_enabled_service_id}</var>
</assign>
<msg timestamp="20171227 06:02:56.198" level="INFO">${not_enabled_service_id} = 2</msg>
<status status="PASS" endtime="20171227 06:02:56.198" starttime="20171227 06:02:56.198"></status>
</kw>
<kw name="Get Service Cost" library="keywords">
<doc>Function to get cost of service</doc>
<arguments>
<arg>${not_enabled_service_id}</arg>
</arguments>
<assign>
<var>${not_enabled_service_cost}</var>
</assign>
<msg timestamp="20171227 06:02:56.199" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:02:56.201" level="INFO">${not_enabled_service_cost} = 0.35</msg>
<status status="PASS" endtime="20171227 06:02:56.201" starttime="20171227 06:02:56.198"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 6. Enable service for client ===</arg>
</arguments>
<msg timestamp="20171227 06:02:56.202" level="INFO">
2017-12-27 06:02:56.202: === Step 6. Enable service for client ===</msg>
<status status="PASS" endtime="20171227 06:02:56.202" starttime="20171227 06:02:56.202"></status>
</kw>
<kw name="Enable Service For Client Id" library="keywords">
<doc>Function to set service enabled for specified client</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${not_enabled_service_id}</arg>
</arguments>
<assign>
<var>${ex_code}</var>
</assign>
<msg timestamp="20171227 06:02:56.203" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:02:56.242" level="INFO">${ex_code} = 202</msg>
<status status="PASS" endtime="20171227 06:02:56.242" starttime="20171227 06:02:56.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${ex_code}</arg>
<arg>202</arg>
</arguments>
<msg timestamp="20171227 06:02:56.243" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20171227 06:02:56.243" starttime="20171227 06:02:56.243"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 7. Wait for service is enabled ===</arg>
</arguments>
<msg timestamp="20171227 06:02:56.244" level="INFO">
2017-12-27 06:02:56.243: === Step 7. Wait for service is enabled ===</msg>
<status status="PASS" endtime="20171227 06:02:56.244" starttime="20171227 06:02:56.243"></status>
</kw>
<kw name="Wait For Service Is Enabled" library="keywords">
<doc>Function to wait until service is enabled for specified client</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${not_enabled_service_id}</arg>
<arg>top_attempts=30</arg>
<arg>sleep_time=2</arg>
</arguments>
<msg timestamp="20171227 06:02:56.245" level="INFO">
2017-12-27 06:02:56.245: Start waiting for service 2 is enabled for client 3</msg>
<msg timestamp="20171227 06:02:56.245" level="INFO">
2017-12-27 06:02:56.245: 30 attempts left</msg>
<msg timestamp="20171227 06:02:56.245" level="INFO">
2017-12-27 06:02:56.245: Checking service 2 in client 3 enabled services</msg>
<msg timestamp="20171227 06:02:56.246" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:02:56.250" level="INFO">
2017-12-27 06:02:56.250: Checking service 2 in client enabled services [1]</msg>
<msg timestamp="20171227 06:02:56.250" level="INFO">
2017-12-27 06:02:56.250: Service 2 is not enabled for this client</msg>
<msg timestamp="20171227 06:02:56.250" level="INFO">
2017-12-27 06:02:56.250: Waiting 2 seconds...</msg>
<msg timestamp="20171227 06:02:58.251" level="INFO">
2017-12-27 06:02:58.251: 29 attempts left</msg>
<msg timestamp="20171227 06:02:58.251" level="INFO">
2017-12-27 06:02:58.251: Checking service 2 in client 3 enabled services</msg>
<msg timestamp="20171227 06:02:58.252" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:02:58.255" level="INFO">
2017-12-27 06:02:58.255: Checking service 2 in client enabled services [1, 2]</msg>
<msg timestamp="20171227 06:02:58.255" level="INFO">
2017-12-27 06:02:58.255: Service 2 is enabled for client 3</msg>
<status status="PASS" endtime="20171227 06:02:58.255" starttime="20171227 06:02:56.244"></status>
</kw>
<kw name="Get Client Services" library="keywords">
<doc>Function to get clients enabled services</doc>
<arguments>
<arg>${client_id}</arg>
</arguments>
<assign>
<var>${enabled_services2}</var>
</assign>
<msg timestamp="20171227 06:02:58.256" level="INFO">Starting new HTTP connection (1): localhost</msg>
<msg timestamp="20171227 06:02:58.259" level="INFO">${enabled_services2} = [1, 2]</msg>
<status status="PASS" endtime="20171227 06:02:58.259" starttime="20171227 06:02:58.255"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 8. Get client balance ===</arg>
</arguments>
<msg timestamp="20171227 06:02:58.259" level="INFO">
2017-12-27 06:02:58.259: === Step 8. Get client balance ===</msg>
<status status="PASS" endtime="20171227 06:02:58.260" starttime="20171227 06:02:58.259"></status>
</kw>
<kw name="Select Clients Balance" library="keywords">
<doc>Function to get client balance</doc>
<arguments>
<arg>${client_id}</arg>
<arg>${database}</arg>
</arguments>
<assign>
<var>${final_client_balance}</var>
</assign>
<msg timestamp="20171227 06:02:58.260" level="INFO">
2017-12-27 06:02:58.260: Selecting balance for client with client_id=3...</msg>
<msg timestamp="20171227 06:02:58.262" level="INFO">${final_client_balance} = 3.5</msg>
<status status="PASS" endtime="20171227 06:02:58.262" starttime="20171227 06:02:58.260"></status>
</kw>
<kw name="Log Step" library="keywords">
<doc>Steps logger</doc>
<arguments>
<arg>=== Step 9. Check that balance is correct ===</arg>
</arguments>
<msg timestamp="20171227 06:02:58.262" level="INFO">
2017-12-27 06:02:58.262: === Step 9. Check that balance is correct ===</msg>
<status status="PASS" endtime="20171227 06:02:58.262" starttime="20171227 06:02:58.262"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${client_balance}-${not_enabled_service_cost}</arg>
</arguments>
<assign>
<var>${calc_final_balance}</var>
</assign>
<msg timestamp="20171227 06:02:58.263" level="INFO">${calc_final_balance} = 3.15</msg>
<status status="PASS" endtime="20171227 06:02:58.263" starttime="20171227 06:02:58.262"></status>
</kw>
<kw name="Compare Results" library="keywords">
<doc>Function to compare actual result with expected result</doc>
<arguments>
<arg>${final_client_balance}</arg>
<arg>${calc_final_balance}</arg>
</arguments>
<msg timestamp="20171227 06:02:58.263" level="INFO">
2017-12-27 06:02:58.263: Compare actual result 3.5 with calculated result 3.15</msg>
<msg timestamp="20171227 06:02:58.263" level="INFO">
2017-12-27 06:02:58.263: 3.5 and 3.15 should be equal</msg>
<msg timestamp="20171227 06:02:58.272" level="FAIL">MyError: 3.5 != 3.15, but should</msg>
<status status="FAIL" endtime="20171227 06:02:58.272" starttime="20171227 06:02:58.263"></status>
</kw>
<kw type="teardown" name="Main Test Teardown" library="Setup_teardown">
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Starting Test case Teardown\n</arg>
</arguments>
<status status="PASS" endtime="20171227 06:02:58.273" starttime="20171227 06:02:58.272"></status>
</kw>
<kw name="Stop Application" library="keywords">
<doc>Main teardown function for test case</doc>
<msg timestamp="20171227 06:02:58.273" level="INFO">
2017-12-27 06:02:58.273: Stopping 'testing_web_1' application...</msg>
<msg timestamp="20171227 06:02:58.275" level="INFO">
2017-12-27 06:02:58.275: ('/home/andrei/testing_task/testing\n', '', 0)</msg>
<msg timestamp="20171227 06:02:58.276" level="INFO">
2017-12-27 06:02:58.276: ('/home/andrei/testing_task/testing\n', '', 0)</msg>
<msg timestamp="20171227 06:02:58.277" level="INFO">
2017-12-27 06:02:58.277: Executing 'docker-compose down' command...</msg>
<msg timestamp="20171227 06:03:09.285" level="INFO">
2017-12-27 06:03:09.285: Application successfully stopped</msg>
<status status="PASS" endtime="20171227 06:03:09.286" starttime="20171227 06:02:58.273"></status>
</kw>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>log to console</arg>
<arg>FAIL ${TEST NAME}\n\n</arg>
</arguments>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>FAIL ${TEST NAME}\n\n</arg>
</arguments>
<status status="PASS" endtime="20171227 06:03:09.286" starttime="20171227 06:03:09.286"></status>
</kw>
<status status="PASS" endtime="20171227 06:03:09.286" starttime="20171227 06:03:09.286"></status>
</kw>
<kw name="Run Keyword If Test Passed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test passed.</doc>
<arguments>
<arg>log to console</arg>
<arg>PASS ${TEST NAME}\n\n</arg>
</arguments>
<status status="PASS" endtime="20171227 06:03:09.287" starttime="20171227 06:03:09.287"></status>
</kw>
<status status="PASS" endtime="20171227 06:03:09.287" starttime="20171227 06:02:58.272"></status>
</kw>
<tags>
<tag>TC0001</tag>
</tags>
<status status="FAIL" endtime="20171227 06:03:09.287" critical="yes" starttime="20171227 06:02:54.841">MyError: 3.5 != 3.15, but should</status>
</test>
<kw type="teardown" name="Main Teardown" library="Setup_teardown">
<kw name="Email Results" library="keywords">
<arguments>
<arg>sender_email=database_testing@mail.com</arg>
<arg>recipients_email=cilicium_2@mail.ru</arg>
<arg>path_to_log=/home/andrei/testing_task/framework/logs/log.html</arg>
<arg>result=${SUITE STATUS}</arg>
</arguments>
<msg timestamp="20171227 06:03:09.680" level="FAIL">SMTPAuthenticationError: (535, '5.7.8 Username and Password not accepted. Learn more at\n5.7.8  https://support.google.com/mail/?p=BadCredentials c26sm4596130lfh.2 - gsmtp')</msg>
<status status="FAIL" endtime="20171227 06:03:09.680" starttime="20171227 06:03:09.288"></status>
</kw>
<status status="FAIL" endtime="20171227 06:03:09.681" starttime="20171227 06:03:09.287">SMTPAuthenticationError: (535, '5.7.8 Username and Password not accepted. Learn more at\n5.7.8  https://support.google.com/mail/?p=BadCredentials c26sm4596130lfh.2 - gsmtp')</status>
</kw>
<doc>Suite description</doc>
<status status="FAIL" endtime="20171227 06:03:09.681" starttime="20171227 06:02:54.752">Suite teardown failed:
SMTPAuthenticationError: (535, '5.7.8 Username and Password not accepted. Learn more at\n5.7.8  https://support.google.com/mail/?p=BadCredentials c26sm4596130lfh.2 - gsmtp')</status>
</suite>
<statistics>
<total>
<stat fail="1" pass="0">Critical Tests</stat>
<stat fail="1" pass="0">All Tests</stat>
</total>
<tag>
<stat fail="1" pass="0">TC0001</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="TS001" pass="0">TS001</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
